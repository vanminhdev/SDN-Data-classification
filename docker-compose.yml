version: '3.8'
services:
  mininet:
    image: sdn-mininet:latest
    container_name: mininet-test
    build:
      context: ./mininet
      dockerfile: Dockerfile
    depends_on:
      controller1:
        condition: service_healthy
      controller2:
        condition: service_healthy
    environment:
      - INIT_NET=/scripts/init_net.py
    privileged: true
    volumes:
      - $PWD/mininet/scripts:/scripts
      - $PWD/mininet/kernel/modules:/lib/modules
      - $PWD/mininet/pcaps:/pcaps
      - $PWD/mininet/mkdata:/mkdata
    command: >
      bash -c '
        touch /etc/network/interfaces;
        service openvswitch-switch start;
        #python3 /scripts/init_net.py;
        tail -f /dev/null
      '
    networks:
      sdn_network:
        ipv4_address: 192.168.0.100

  controller1:
    image: onos-controller:latest
    container_name: controller1
    build:
      context: ./controllers
      dockerfile: Dockerfile.onos
      # args:
        # - ONOS_DATA_CLASSIFICATION_OAR=${ONOS_DATA_CLASSIFICATION_OAR}
        # - ONOS_DATA_CLASSIFICATION_VERSION=${ONOS_DATA_CLASSIFICATION_VERSION}
    environment:
      - ONOS_APPS="drivers,hostprovider,lldpprovider,gui2,fwd,openflow,openflow-base,optical-model"
    ports:
      - 8181:8181
      - 5005:5005
    command: >
      bash -c '
        onos-service
      '
    networks:
      sdn_network:
        ipv4_address: 192.168.0.2

  controller2:
    image: onos-controller:latest
    container_name: controller2
    depends_on: #không build image mà lấy image từ controller1
      - controller1
    environment:
      - ONOS_APPS="drivers,hostprovider,lldpprovider,gui2,fwd,openflow,"
    ports:
      - 8182:8181
      - 5006:5005
    command: >
      bash -c '
        onos-service
      '
    networks:
      sdn_network:
        ipv4_address: 192.168.0.3
  handle-classification:
    image: handle-classification:latest
    container_name: handle-classification
    build:
      context: ./apps/classification
      dockerfile: Dockerfile
    ports:
      - 5007:5000
    environment:
      - ONOS_USERNAME=onos
      - ONOS_PASSWORD=rocks
      - ONOS_IP=192.168.0.2
      - ONOS_PORT=8181
      - IS_COLLECT=true #true: collect data, false: not collect data
      - LABEL=web #nhãn gán cho dữ liệu web, video, voip, unknown
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_DATABASE=sdn
      - MONGODB_COLLECTION=traffic
    networks:
      sdn_network:
        ipv4_address: 192.168.0.4

  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    ports:
      - 8086:8086
    volumes:
      - influxdb_data:/var/lib/influxdb2
    networks:
      sdn_network:
        ipv4_address: 192.168.0.5

  mongodb:
    image: mongo:latest
    container_name: mongodb-sdn
    ports:
      - 27017:27017
    volumes:
      - mongodb_data:/data/db
    networks:
      sdn_network:
        ipv4_address: 192.168.0.6

volumes:
  influxdb_data:
  mongodb_data:
networks:
  sdn_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.0.1/24
          gateway: 192.168.0.1