version: '3.8'
services:
  mininet:
    image: sdn-mininet:latest
    container_name: mininet-test
    build:
      context: ./mininet
      dockerfile: Dockerfile
    depends_on:
      controller1:
        condition: service_healthy
      controller2:
        condition: service_healthy
    environment:
      - INIT_NET=/scripts/init_net.py
    privileged: true
    volumes:
      - $PWD/mininet/scripts:/scripts
      - $PWD/mininet/kernel/modules:/lib/modules
    networks:
      sdn_network:
        ipv4_address: 192.168.0.100

  controller1:
    image: onos-controller:latest
    container_name: controller1
    build:
      context: ./controllers
      dockerfile: Dockerfile.onos
      args:
        - ONOS_DATA_CLASSIFICATION_OAR=${ONOS_DATA_CLASSIFICATION_OAR}
        - ONOS_DATA_CLASSIFICATION_VERSION=${ONOS_DATA_CLASSIFICATION_VERSION}
    environment:
      - ONOS_APPS="drivers,hostprovider,lldpprovider,gui2,vn.edu.huce.data-classification,fwd,openflow,"
    ports:
      - 8181:8181
      - 5005:5005
    command: >
      bash -c '
        onos-service
      '
    networks:
      sdn_network:
        ipv4_address: 192.168.0.2

  controller2:
    image: onos-controller:latest
    container_name: controller2
    depends_on: #không build image mà lấy image từ controller1
      - controller1
    environment:
      - ONOS_APPS="drivers,hostprovider,lldpprovider,gui2,fwd,openflow,"
    ports:
      - 8182:8181
      - 5006:5005
    command: >
      bash -c '
        onos-service
      '
    networks:
      sdn_network:
        ipv4_address: 192.168.0.3

networks:
  sdn_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.0.1/24
          gateway: 192.168.0.1